package by.bsuir.banking.admin.domain;

import org.hibernate.validator.constraints.NotEmpty;

import by.bsuir.banking.dotnetclient.ObjectFactory;
import by.bsuir.banking.dotnetclient.Operator;

/**
 * Fake bean for Operator entity
 * @author Katherine
 *
 */
public class OperatorWrapper{

	private static ObjectFactory factory = new ObjectFactory();
	private Operator operator; 
	
	public OperatorWrapper(){
		operator = factory.createOperator();
	}
	
	/**
	 * Getting operator instance for this wrapper
	 * @return
	 */
	public Operator getOperator(){
		return operator;
	}
	
	/**
	 * Getting firstName property of the operator object.
	 * @return String value of the first name property.
	 */
	@NotEmpty
	public String getFirstName(){
		return (operator.getFirstName() == null) ? null : operator.getFirstName().getValue();
	}
	
	/**
	 * Setting first name of the operator object
	 * @param firstNameValue
	 */
	public void setFirstName(String firstNameValue){
		operator.setFirstName(factory.createOperatorFirstName(firstNameValue));
	}
	
	/**
	 * Getting middleName property of the operator object.
	 * @return String value of the middle name property.
	 */
	public String getMiddleName(){
		return (operator.getMiddleName() == null) ? null : operator.getMiddleName().getValue();
	}
	
	/**
	 * Setting middle name of the operator object
	 * @param middleNameValue
	 */
	public void setMiddleName(String middleNameValue){
		operator.setMiddleName(factory.createOperatorMiddleName(middleNameValue));
	}
	
	/**
	 * Getting lastName property of the operator object.
	 * @return String value of the last name property.
	 */
	@NotEmpty
	public String getLastName(){
		return (operator.getLastName() == null) ? null : operator.getLastName().getValue();
	}
	
	/**
	 * Setting last name of the operator object
	 * @param lastNameValue
	 */
	public void setLastName(String lastNameValue){
		operator.setLastName(factory.createOperatorLastName(lastNameValue));
	}
	
	/**
	 * Getting login property of the operator object.
	 * @return String value of the login property.
	 */
	@NotEmpty
	public String getLogin(){
		return (operator.getLogin() == null) ? null : operator.getLogin().getValue();
	}
	
	/**
	 * Setting login of the operator object
	 * @param loginValue
	 */
	public void setLogin(String loginValue){
		operator.setLogin(factory.createOperatorLogin(loginValue));
	}
	
	/**
	 * Getting password property of the operator object.
	 * @return String value of the password property.
	 */
	@NotEmpty
	public String getPassword(){
		return (operator.getPassword() == null) ? null : operator.getPassword().getValue();
	}
	
	/**
	 * Setting password of the operator object
	 * @param passwordValue
	 */
	public void setPassword(String passwordValue){
		operator.setPassword(factory.createOperatorPassword(passwordValue));
	}
	
	/**
	 * Getting id property of the operator object.
	 * There's no setter for this property - id is autogenerated
	 * @return String value of the id property.
	 */
	public Integer getId(){
		return operator.getId();
	}

}
